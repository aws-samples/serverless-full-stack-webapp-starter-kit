// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Snapshot test 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CertificateV29EE77EAF": {
      "Properties": {
        "DomainName": "*.example.com",
        "DomainValidationOptions": [
          {
            "DomainName": "example.com",
            "HostedZoneId": "DUMMY",
          },
        ],
        "SubjectAlternativeNames": [
          "example.com",
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitUsEast1Stack/CertificateV2",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
    },
    "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A": {
      "DependsOn": [
        "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REDACTED",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameters",
                    "ssm:ListTagsForResource",
                    "ssm:GetParameters",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ssm:us-west-2:123456789012:parameter/cdk/exports/*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExportsWriteruswest209BD44F0A7CF058B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A",
            "Arn",
          ],
        },
        "WriterProps": {
          "exports": {
            "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefCertificateV29EE77EAF5C85697F": {
              "Ref": "CertificateV29EE77EAF",
            },
            "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefSignPayloadHandlerFunctionVersionF9FE430A3006B9FA": {
              "Ref": "SignPayloadHandlerFunctionVersionF9FE430A",
            },
          },
          "region": "us-west-2",
        },
      },
      "Type": "Custom::CrossRegionExportWriter",
      "UpdateReplacePolicy": "Delete",
    },
    "Record83264F3E": {
      "Properties": {
        "HostedZoneId": "DUMMY",
        "Name": "example.com.",
        "ResourceRecords": [
          "8.8.8.8",
        ],
        "TTL": "1800",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "SignPayloadHandlerCFEAA14C": {
      "DependsOn": [
        "SignPayloadHandlerServiceRole29261232",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REDACTED",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "SignPayloadHandlerServiceRole29261232",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "SignPayloadHandlerCurrentVersionREDACTED": {
      "Properties": {
        "FunctionName": {
          "Ref": "SignPayloadHandlerCFEAA14C",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "SignPayloadHandlerFunctionVersionF9FE430A": {
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "SignPayloadHandlerCurrentVersionREDACTED",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SignPayloadHandlerServiceRole29261232": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`Snapshot test 2`] = `
{
  "Description": "Serverless fullstack webapp stack (uksb-1tupboc47)",
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": {
    "AsyncJobHandlerArnCA46B385": {
      "Value": {
        "Fn::GetAtt": [
          "AsyncJobHandler438266BD",
          "Arn",
        ],
      },
    },
    "AuthUserPoolClientId8216BF9A": {
      "Value": {
        "Ref": "AuthUserPoolClientC635291F",
      },
    },
    "AuthUserPoolDomainName8D4A2606": {
      "Value": "auth.example.com",
    },
    "AuthUserPoolIdC0605E59": {
      "Value": {
        "Ref": "AuthUserPool8115E87F",
      },
    },
    "DatabaseBastionHostBastionHostId1600F37C": {
      "Description": "Instance ID of the bastion host. Use this to connect via SSM Session Manager",
      "Value": {
        "Ref": "DatabaseBastionHost4C4FAD9C",
      },
    },
    "DatabaseDatabaseSecretsCommandF4A622EB": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws secretsmanager get-secret-value --secret-id ",
            {
              "Fn::Join": [
                "-",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "DatabaseClusterSecretD1FB634F",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "DatabaseClusterSecretD1FB634F",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
            " --region us-west-2",
          ],
        ],
      },
    },
    "DatabasePortForwardCommandC3718B89": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ssm start-session --region us-west-2 --target ",
            {
              "Ref": "DatabaseBastionHost4C4FAD9C",
            },
            " --document-name AWS-StartPortForwardingSessionToRemoteHost --parameters '{"portNumber":["",
            {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            ""], "localPortNumber":["",
            {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            ""], "host": ["",
            {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Address",
              ],
            },
            ""]}'",
          ],
        ],
      },
    },
    "EventBusHttpEndpoint1C68A807": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "EventBusApi6E8C7C94",
                "Dns.Http",
              ],
            },
          ],
        ],
      },
    },
    "FrontendDomainName": {
      "Value": "https://web.example.com",
    },
    "MigrationCommand": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws lambda invoke --function-name ",
            {
              "Ref": "WebappMigrationRunnerAC67C012",
            },
            " --payload '{"command":"deploy"}' --cli-binary-format raw-in-base64-out /dev/stdout",
          ],
        ],
      },
    },
    "MigrationFunctionName": {
      "Value": {
        "Ref": "WebappMigrationRunnerAC67C012",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-arm64",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-west-2",
          "S3Key": "REDACTED",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91": {
      "DependsOn": [
        "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-west-2",
          "S3Key": "REDACTED",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "WebappMigrationRunnerAC67C012",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccessLogBucketAutoDeleteObjectsCustomResource01AB31E8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AccessLogBucketPolicyF52D2D01",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "AccessLogBucketDA470295",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "AccessLogBucketDA470295": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "AccessLogBucketPolicyF52D2D01": {
      "Properties": {
        "Bucket": {
          "Ref": "AccessLogBucketDA470295",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AccessLogBucketDA470295",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AccessLogBucketDA470295",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AccessLogBucketDA470295",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AccessLogBucketDA470295",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AsyncJobHandler438266BD": {
      "DependsOn": [
        "AsyncJobHandlerServiceRoleDefaultPolicy0B2DEDB5",
        "AsyncJobHandlerServiceRoleFE9F530F",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "ImageUri": {
            "Fn::Sub": "REDACTED",
          },
        },
        "Environment": {
          "Variables": {
            "DATABASE_ENGINE": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:engine::}}",
                ],
              ],
            },
            "DATABASE_HOST": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Address",
              ],
            },
            "DATABASE_NAME": "main",
            "DATABASE_OPTION": "?pool_timeout=20&connect_timeout=20",
            "DATABASE_PASSWORD": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:password::}}",
                ],
              ],
            },
            "DATABASE_PORT": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            "DATABASE_URL": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:engine::}}://{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:username::}}:{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:password::}}@",
                  {
                    "Fn::GetAtt": [
                      "DatabaseCluster5B53A178",
                      "Endpoint.Address",
                    ],
                  },
                  ":",
                  {
                    "Fn::GetAtt": [
                      "DatabaseCluster5B53A178",
                      "Endpoint.Port",
                    ],
                  },
                  "/main?pool_timeout=20&connect_timeout=20",
                ],
              ],
            },
            "DATABASE_USER": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:username::}}",
                ],
              ],
            },
            "EVENT_HTTP_ENDPOINT": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::GetAtt": [
                      "EventBusApi6E8C7C94",
                      "Dns.Http",
                    ],
                  },
                ],
              ],
            },
          },
        },
        "ImageConfig": {
          "Command": [
            "async-job-runner.handler",
          ],
        },
        "MemorySize": 256,
        "PackageType": "Image",
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "AsyncJobHandlerServiceRoleFE9F530F",
            "Arn",
          ],
        },
        "Timeout": 600,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "AsyncJobHandlerSecurityGroupF59812E6",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A",
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
            },
            {
              "Ref": "VpcPrivateSubnet3SubnetF258B56E",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AsyncJobHandlerSecurityGroupF59812E6": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function ServerlessWebappStarterKitStackAsyncJobHandlerF20B94EA",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AsyncJobHandlerServiceRoleDefaultPolicy0B2DEDB5": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "appsync:EventPublish",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appsync:us-west-2:123456789012:apis/",
                    {
                      "Fn::GetAtt": [
                        "EventBusApi6E8C7C94",
                        "ApiId",
                      ],
                    },
                    "/channelNamespace/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "translate:TranslateText",
                "comprehend:DetectDominantLanguage",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AsyncJobHandlerServiceRoleDefaultPolicy0B2DEDB5",
        "Roles": [
          {
            "Ref": "AsyncJobHandlerServiceRoleFE9F530F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AsyncJobHandlerServiceRoleFE9F530F": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AsyncJobSampleJob3C1EBA2C": {
      "Properties": {
        "FlexibleTimeWindow": {
          "Mode": "OFF",
        },
        "ScheduleExpression": "cron(0 0 1 * ? *)",
        "ScheduleExpressionTimezone": "Etc/UTC",
        "State": "ENABLED",
        "Target": {
          "Arn": {
            "Fn::GetAtt": [
              "AsyncJobHandler438266BD",
              "Arn",
            ],
          },
          "Input": "{"jobType":"SampleJob"}",
          "RetryPolicy": {
            "MaximumEventAgeInSeconds": 86400,
            "MaximumRetryAttempts": 5,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "SchedulerRoleForTarget44ece2CFC6840F",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "AuthBranding34BB87FD": {
      "Properties": {
        "ClientId": {
          "Ref": "AuthUserPoolClientC635291F",
        },
        "UseCognitoProvidedValues": true,
        "UserPoolId": {
          "Ref": "AuthUserPool8115E87F",
        },
      },
      "Type": "AWS::Cognito::ManagedLoginBranding",
    },
    "AuthCognitoDomainRecordBA8AA168": {
      "Properties": {
        "HostedZoneId": "DUMMY",
        "Name": "auth.example.com.",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "AuthUserPoolCognitoDomainAD9D79E1",
              "CloudFrontDistribution",
            ],
          },
        ],
        "TTL": "1800",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "AuthUserPool8115E87F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false,
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UsernameAttributes": [
          "email",
        ],
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthUserPoolClientC635291F": {
      "Properties": {
        "AllowedOAuthFlows": [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "http://localhost:3010/api/auth/sign-in-callback",
          "https://web.example.com/api/auth/sign-in-callback",
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "IdTokenValidity": 1440,
        "LogoutURLs": [
          "http://localhost:3010/api/auth/sign-out-callback",
          "https://web.example.com/api/auth/sign-out-callback",
        ],
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "TokenValidityUnits": {
          "IdToken": "minutes",
        },
        "UserPoolId": {
          "Ref": "AuthUserPool8115E87F",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "AuthUserPoolCognitoDomainAD9D79E1": {
      "Properties": {
        "CustomDomainConfig": {
          "CertificateArn": {
            "Fn::GetAtt": [
              "ExportsReader8B249524",
              "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefCertificateV29EE77EAF5C85697F",
            ],
          },
        },
        "Domain": "auth.example.com",
        "ManagedLoginVersion": 2,
        "UserPoolId": {
          "Ref": "AuthUserPool8115E87F",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64C13E3549": {
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/amazonlinux2-aarch64-standard:3.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "ARM_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64RoleC5F7BBFE",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "build": {
      "commands": [
        "current_dir=$(pwd)",
        "echo \\"$input\\"",
        "mkdir workdir",
        "cd workdir",
        "aws s3 cp \\"$sourceS3Url\\" temp.zip",
        "unzip temp.zip",
        "ls -la",
        "aws ecr get-login-password | docker login --username AWS --password-stdin $repositoryAuthUri",
        "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws",
        "docker buildx create --use",
        "docker buildx ls",
        "eval \\"$buildCommand\\""
      ]
    },
    "post_build": {
      "commands": [
        "echo Build completed on \`date\`",
        "\\nSTATUS='SUCCESS'\\nif [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ] # Test if the build is failing\\nthen\\nSTATUS='FAILED'\\nREASON=\\"ContainerImageBuild failed. See CloudWatch Log stream for the detailed reason: \\nhttps://$AWS_REGION.console.aws.amazon.com/cloudwatch/home?region=$AWS_REGION#logsV2:log-groups/log-group/\\\\$252Faws\\\\$252Fcodebuild\\\\$252F$projectName/log-events/$CODEBUILD_LOG_PATH\\"\\nfi\\ncat <<EOF > payload.json\\n{\\n  \\"StackId\\": \\"$stackId\\",\\n  \\"RequestId\\": \\"$requestId\\",\\n  \\"LogicalResourceId\\":\\"$logicalResourceId\\",\\n  \\"PhysicalResourceId\\": \\"$imageTag\\",\\n  \\"Status\\": \\"$STATUS\\",\\n  \\"Reason\\": \\"$REASON\\",\\n  \\"Data\\": {\\n    \\"ImageTag\\": \\"$imageTag\\"\\n  }\\n}\\nEOF\\ncurl -v -i -X PUT -H 'Content-Type:' -d \\"@payload.json\\" \\"$responseURL\\"\\n              "
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64RoleC5F7BBFE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64RoleDefaultPolicy2316728F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:us-west-2:123456789012:log-group:/aws/codebuild/",
                      {
                        "Ref": "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64C13E3549",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:us-west-2:123456789012:log-group:/aws/codebuild/",
                      {
                        "Ref": "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64C13E3549",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:us-west-2:123456789012:report-group/",
                    {
                      "Ref": "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64C13E3549",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:CompleteLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:InitiateLayerUpload",
                "ecr:PutImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebappBuildRepository4C93D48D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ecr:DescribeImages",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebappBuildRepository4C93D48D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-123456789012-us-west-2",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-123456789012-us-west-2/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64RoleDefaultPolicy2316728F",
        "Roles": [
          {
            "Ref": "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64RoleC5F7BBFE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68": {
      "DependsOn": [
        "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-west-2",
          "S3Key": "REDACTED",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:AddTagsToResource",
                    "ssm:RemoveTagsFromResource",
                    "ssm:GetParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-west-2:123456789012:parameter/cdk/exports/ServerlessWebappStarterKitStack/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-west-2",
          "S3Key": "REDACTED",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "AccessLogBucketDA470295",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseBastionHost4C4FAD9C": {
      "DependsOn": [
        "DatabaseBastionHostInstanceRoleDefaultPolicy15D8D0EA",
        "DatabaseBastionHostInstanceRole87A429B0",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sdf",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 8,
            },
          },
        ],
        "IamInstanceProfile": {
          "Ref": "DatabaseBastionHostInstanceProfile0F4F3411",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.nano",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DatabaseBastionHostInstanceSecurityGroup39D7809A",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "DatabaseBastionHostInstanceProfile0F4F3411": {
      "Properties": {
        "Roles": [
          {
            "Ref": "DatabaseBastionHostInstanceRole87A429B0",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "DatabaseBastionHostInstanceRole87A429B0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseBastionHostInstanceRoleDefaultPolicy15D8D0EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssmmessages:*",
                "ssm:UpdateInstanceInformation",
                "ec2messages:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatabaseBastionHostInstanceRoleDefaultPolicy15D8D0EA",
        "Roles": [
          {
            "Ref": "DatabaseBastionHostInstanceRole87A429B0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatabaseBastionHostInstanceSecurityGroup39D7809A": {
      "Properties": {
        "GroupDescription": "ServerlessWebappStarterKitStack/Database/BastionHost/Resource/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseCluster5B53A178": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": {
          "Ref": "DatabaseParameterGroup2A921026",
        },
        "DBSubnetGroupName": {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "Engine": "aurora-postgresql",
        "EngineVersion": "16.6",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DatabaseClusterSecretD1FB634F",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DatabaseClusterSecretD1FB634F",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": 5432,
        "ServerlessV2ScalingConfiguration": {
          "MaxCapacity": 2,
          "MinCapacity": 0,
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DatabaseClusterSecurityGroupFEF1426A",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DatabaseClusterSecretAttachmentDC8466C0": {
      "Properties": {
        "SecretId": {
          "Ref": "DatabaseClusterSecretD1FB634F",
        },
        "TargetId": {
          "Ref": "DatabaseCluster5B53A178",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DatabaseClusterSecretD1FB634F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\,=^",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterSecurityGroupFEF1426A": {
      "Properties": {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseClusterSecurityGroupfromServerlessWebappStarterKitStackAsyncJobHandlerSecurityGroup5220DFB3IndirectPort9323962E": {
      "Properties": {
        "Description": "from ServerlessWebappStarterKitStackAsyncJobHandlerSecurityGroup5220DFB3:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AsyncJobHandlerSecurityGroupF59812E6",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromServerlessWebappStarterKitStackDatabaseBastionHostInstanceSecurityGroup4F0DD25BIndirectPort8AFD9922": {
      "Properties": {
        "Description": "from ServerlessWebappStarterKitStackDatabaseBastionHostInstanceSecurityGroup4F0DD25B:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DatabaseBastionHostInstanceSecurityGroup39D7809A",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromServerlessWebappStarterKitStackWebappHandlerSecurityGroupA009CF4AIndirectPort7311063E": {
      "Properties": {
        "Description": "from ServerlessWebappStarterKitStackWebappHandlerSecurityGroupA009CF4A:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "WebappHandlerSecurityGroup5451B519",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromServerlessWebappStarterKitStackWebappMigrationRunnerSecurityGroupC0959349IndirectPortDCF4A356": {
      "Properties": {
        "Description": "from ServerlessWebappStarterKitStackWebappMigrationRunnerSecurityGroupC0959349:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "WebappMigrationRunnerSecurityGroup7F0DF264",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSubnets5540150D": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for Cluster database",
        "SubnetIds": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
          {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DatabaseClusterWriterD43085C6": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "AutoMinorVersionUpgrade": true,
        "DBClusterIdentifier": {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": "db.serverless",
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseParameterGroup2A921026": {
      "Properties": {
        "Description": "Cluster parameter group for aurora-postgresql16",
        "Family": "aurora-postgresql16",
        "Parameters": {
          "idle_session_timeout": "60000",
        },
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f306AEFF37": {
      "DependsOn": [
        "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f3ServiceRoleDefaultPolicyFECC51DC",
        "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f3ServiceRoleB008BAA4",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-west-2",
          "S3Key": "REDACTED",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f3ServiceRoleB008BAA4",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f3ServiceRoleB008BAA4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f3ServiceRoleDefaultPolicyFECC51DC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64C13E3549",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f3ServiceRoleDefaultPolicyFECC51DC",
        "Roles": [
          {
            "Ref": "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f3ServiceRoleB008BAA4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EventBusApi6E8C7C94": {
      "Properties": {
        "EventConfig": {
          "AuthProviders": [
            {
              "AuthType": "AWS_IAM",
            },
            {
              "AuthType": "AMAZON_COGNITO_USER_POOLS",
              "CognitoConfig": {
                "AwsRegion": "us-west-2",
                "UserPoolId": {
                  "Ref": "AuthUserPool8115E87F",
                },
              },
            },
          ],
          "ConnectionAuthModes": [
            {
              "AuthType": "AWS_IAM",
            },
            {
              "AuthType": "AMAZON_COGNITO_USER_POOLS",
            },
          ],
          "DefaultPublishAuthModes": [
            {
              "AuthType": "AWS_IAM",
            },
          ],
          "DefaultSubscribeAuthModes": [
            {
              "AuthType": "AWS_IAM",
            },
            {
              "AuthType": "AMAZON_COGNITO_USER_POOLS",
            },
          ],
        },
        "Name": "ServerlessWackEventBus8815362F",
      },
      "Type": "AWS::AppSync::Api",
    },
    "EventBusNamespaceA69F015E": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "EventBusApi6E8C7C94",
            "ApiId",
          ],
        },
        "CodeS3Location": "s3://cdk-hnb659fds-assets-123456789012-us-west-2/REDACTED",
        "HandlerConfigs": {},
        "Name": "event-bus",
      },
      "Type": "AWS::AppSync::ChannelNamespace",
    },
    "ExportsReader8B249524": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ReaderProps": {
          "imports": {
            "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefCertificateV29EE77EAF5C85697F": "{{resolve:ssm:/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefCertificateV29EE77EAF5C85697F}}",
            "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefSignPayloadHandlerFunctionVersionF9FE430A3006B9FA": "{{resolve:ssm:/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefSignPayloadHandlerFunctionVersionF9FE430A3006B9FA}}",
          },
          "prefix": "ServerlessWebappStarterKitStack",
          "region": "us-west-2",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CrossRegionExportReader",
      "UpdateReplacePolicy": "Delete",
    },
    "LookupVersionArnc8730278af02f875114ca902814c77b68f19b0087110E04D0A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "LookupVersionArnc8730278af02f875114ca902814c77b68f19b00871CustomResourcePolicy7CD24C5F",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"getParameter","parameters":{"Name":"",
              {
                "Fn::GetAtt": [
                  "ExportsReader8B249524",
                  "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefSignPayloadHandlerFunctionVersionF9FE430A3006B9FA",
                ],
              },
              ""},"physicalResourceId":{"id":"1577836800000"},"region":"us-east-1"}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"getParameter","parameters":{"Name":"",
              {
                "Fn::GetAtt": [
                  "ExportsReader8B249524",
                  "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefSignPayloadHandlerFunctionVersionF9FE430A3006B9FA",
                ],
              },
              ""},"physicalResourceId":{"id":"1577836800000"},"region":"us-east-1"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "LookupVersionArnc8730278af02f875114ca902814c77b68f19b00871CustomResourcePolicy7CD24C5F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:123456789012:parameter/",
                    {
                      "Fn::GetAtt": [
                        "ExportsReader8B249524",
                        "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefSignPayloadHandlerFunctionVersionF9FE430A3006B9FA",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LookupVersionArnc8730278af02f875114ca902814c77b68f19b00871CustomResourcePolicy7CD24C5F",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SchedulerRoleForTarget44ece2CFC6840F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "123456789012",
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":scheduler:us-west-2:123456789012:schedule-group/default",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SchedulerRoleForTarget44ece2DefaultPolicyFDF3E159": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AsyncJobHandler438266BD",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AsyncJobHandler438266BD",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SchedulerRoleForTarget44ece2DefaultPolicyFDF3E159",
        "Roles": [
          {
            "Ref": "SchedulerRoleForTarget44ece2CFC6840F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcNatSecurityGroup8DA26EDC": {
      "Properties": {
        "GroupDescription": "Security Group for NAT instances",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL TRAFFIC",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "VpcPublicSubnet1NatInstance57B636B8",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "VpcPublicSubnet1NatInstance57B636B8",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "VpcPublicSubnet1NatInstance57B636B8",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1NatInstance57B636B8": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1NatInstanceInstanceRole9D835E32",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "VpcPublicSubnet1NatInstanceInstanceProfileEE10C485",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.nano",
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Fn::GetAtt": [
                  "VpcNatSecurityGroup8DA26EDC",
                  "GroupId",
                ],
              },
            ],
            "SubnetId": {
              "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
            },
          },
        ],
        "SourceDestCheck": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PublicSubnet1/NatInstance",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
yum install iptables-services -y
systemctl enable iptables
systemctl start iptables
echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/custom-ip-forwarding.conf
sudo sysctl -p /etc/sysctl.d/custom-ip-forwarding.conf
sudo /sbin/iptables -t nat -A POSTROUTING -o $(route | awk '/^default/{print $NF}') -j MASQUERADE
sudo /sbin/iptables -F FORWARD
sudo service iptables save",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "VpcPublicSubnet1NatInstanceInstanceProfileEE10C485": {
      "Properties": {
        "Roles": [
          {
            "Ref": "VpcPublicSubnet1NatInstanceInstanceRole9D835E32",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "VpcPublicSubnet1NatInstanceInstanceRole9D835E32": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PublicSubnet1/NatInstance",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "ServerlessWebappStarterKitStack/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "Webapp107041BD": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "web.example.com",
          ],
          "Comment": "CloudFront for Webapp",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": {
              "Ref": "WebappSharedCachePolicy14FEE4A0",
            },
            "Compress": true,
            "LambdaFunctionAssociations": [
              {
                "EventType": "origin-request",
                "IncludeBody": true,
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "LookupVersionArnc8730278af02f875114ca902814c77b68f19b0087110E04D0A",
                    "Parameter.Value",
                  ],
                },
              },
            ],
            "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
            "TargetOriginId": "ServerlessWebappStarterKitStackWebappOrigin1D7B867FF",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "AccessLogBucketDA470295",
                "RegionalDomainName",
              ],
            },
            "Prefix": "Webapp/",
          },
          "Origins": [
            {
              "ConnectionTimeout": 6,
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 60,
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "WebappHandlerFunctionUrl7AEF8DEE",
                          "FunctionUrl",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "ServerlessWebappStarterKitStackWebappOrigin1D7B867FF",
              "OriginAccessControlId": {
                "Fn::GetAtt": [
                  "WebappOrigin1FunctionUrlOriginAccessControlEA98B600",
                  "Id",
                ],
              },
            },
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Fn::GetAtt": [
                "ExportsReader8B249524",
                "/cdk/exports/ServerlessWebappStarterKitStack/ServerlessWebappStarterKitUsEast1Stackuseast1RefCertificateV29EE77EAF5C85697F",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "WebappBuild348806E3": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64C13E3549",
        "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64RoleDefaultPolicy2316728F",
        "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64RoleC5F7BBFE",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeployTimeBuildCustomResourceHandlerdb740fd554364a848a09e6dfcd01f4f306AEFF37",
            "Arn",
          ],
        },
        "buildCommand": {
          "Fn::Join": [
            "",
            [
              "docker buildx build --build-arg ALLOWED_ORIGIN_HOST=*.example.com --build-arg SKIP_TS_BUILD=true --build-arg NEXT_PUBLIC_EVENT_HTTP_ENDPOINT=https://",
              {
                "Fn::GetAtt": [
                  "EventBusApi6E8C7C94",
                  "Dns.Http",
                ],
              },
              " --build-arg NEXT_PUBLIC_AWS_REGION=us-west-2 --platform linux/arm64 --output type=image,name=",
              {
                "Fn::Select": [
                  4,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "WebappBuildRepository4C93D48D",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ".dkr.ecr.",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "WebappBuildRepository4C93D48D",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "WebappBuildRepository4C93D48D",
              },
              ":<IMAGE_TAG>,push=true --provenance=false .",
            ],
          ],
        },
        "codeBuildProjectName": {
          "Ref": "ContainerImageBuildArm64e83729feb1564e709bec452b15847a30amd64C13E3549",
        },
        "repositoryUri": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  4,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "WebappBuildRepository4C93D48D",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ".dkr.ecr.",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "WebappBuildRepository4C93D48D",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "WebappBuildRepository4C93D48D",
              },
            ],
          ],
        },
        "sourceS3Url": "s3://cdk-hnb659fds-assets-123456789012-us-west-2/REDACTED",
        "tagPrefix": "REDACTED",
        "type": "ContainerImageBuild",
      },
      "Type": "Custom::CDKContainerImageBuild",
      "UpdateReplacePolicy": "Delete",
    },
    "WebappBuildRepository4C93D48D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "EmptyOnDelete": true,
        "RepositoryPolicyText": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
    },
    "WebappCloudFrontInvalidation588CF152": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "WebappCloudFrontInvalidationCustomResourcePolicy18C215D6",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"cloudfront","action":"createInvalidation","parameters":{"DistributionId":"",
              {
                "Ref": "Webapp107041BD",
              },
              "","InvalidationBatch":{"CallerReference":"",
              {
                "Fn::GetAtt": [
                  "WebappHandlerCurrentVersionREDACTED",
                  "Version",
                ],
              },
              "","Paths":{"Quantity":1,"Items":["/*"]}}},"physicalResourceId":{"id":"invalidation"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"cloudfront","action":"createInvalidation","parameters":{"DistributionId":"",
              {
                "Ref": "Webapp107041BD",
              },
              "","InvalidationBatch":{"CallerReference":"",
              {
                "Fn::GetAtt": [
                  "WebappHandlerCurrentVersionREDACTED",
                  "Version",
                ],
              },
              "","Paths":{"Quantity":1,"Items":["/*"]}}},"physicalResourceId":{"id":"invalidation"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "WebappCloudFrontInvalidationCustomResourcePolicy18C215D6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudfront:CreateInvalidation",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":cloudfront::123456789012:distribution/",
                    {
                      "Ref": "Webapp107041BD",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WebappCloudFrontInvalidationCustomResourcePolicy18C215D6",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WebappHandler8DD158A3": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
        "WebappHandlerServiceRoleDefaultPolicy7D06F4EA",
        "WebappHandlerServiceRole4F4D1ACD",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "ImageUri": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    4,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Fn::GetAtt": [
                            "WebappBuildRepository4C93D48D",
                            "Arn",
                          ],
                        },
                      ],
                    },
                  ],
                },
                ".dkr.ecr.",
                {
                  "Fn::Select": [
                    3,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Fn::GetAtt": [
                            "WebappBuildRepository4C93D48D",
                            "Arn",
                          ],
                        },
                      ],
                    },
                  ],
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/",
                {
                  "Ref": "WebappBuildRepository4C93D48D",
                },
                ":",
                {
                  "Fn::GetAtt": [
                    "WebappBuild348806E3",
                    "ImageTag",
                  ],
                },
              ],
            ],
          },
        },
        "Environment": {
          "Variables": {
            "AMPLIFY_APP_ORIGIN": "https://web.example.com",
            "ASYNC_JOB_HANDLER_ARN": {
              "Fn::GetAtt": [
                "AsyncJobHandler438266BD",
                "Arn",
              ],
            },
            "COGNITO_DOMAIN": "auth.example.com",
            "DATABASE_ENGINE": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:engine::}}",
                ],
              ],
            },
            "DATABASE_HOST": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Address",
              ],
            },
            "DATABASE_NAME": "main",
            "DATABASE_OPTION": "?pool_timeout=20&connect_timeout=20",
            "DATABASE_PASSWORD": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:password::}}",
                ],
              ],
            },
            "DATABASE_PORT": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            "DATABASE_URL": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:engine::}}://{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:username::}}:{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:password::}}@",
                  {
                    "Fn::GetAtt": [
                      "DatabaseCluster5B53A178",
                      "Endpoint.Address",
                    ],
                  },
                  ":",
                  {
                    "Fn::GetAtt": [
                      "DatabaseCluster5B53A178",
                      "Endpoint.Port",
                    ],
                  },
                  "/main?pool_timeout=20&connect_timeout=20",
                ],
              ],
            },
            "DATABASE_USER": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:username::}}",
                ],
              ],
            },
            "USER_POOL_CLIENT_ID": {
              "Ref": "AuthUserPoolClientC635291F",
            },
            "USER_POOL_ID": {
              "Ref": "AuthUserPool8115E87F",
            },
          },
        },
        "MemorySize": 512,
        "PackageType": "Image",
        "Role": {
          "Fn::GetAtt": [
            "WebappHandlerServiceRole4F4D1ACD",
            "Arn",
          ],
        },
        "Timeout": 180,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "WebappHandlerSecurityGroup5451B519",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A",
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
            },
            {
              "Ref": "VpcPrivateSubnet3SubnetF258B56E",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebappHandlerCurrentVersionREDACTED": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "FunctionName": {
          "Ref": "WebappHandler8DD158A3",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "WebappHandlerFunctionUrl7AEF8DEE": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "AuthType": "AWS_IAM",
        "InvokeMode": "RESPONSE_STREAM",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "WebappHandler8DD158A3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Url",
    },
    "WebappHandlerSecurityGroup5451B519": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function ServerlessWebappStarterKitStackWebappHandlerF1A4ACC9",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WebappHandlerServiceRole4F4D1ACD": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebappHandlerServiceRoleDefaultPolicy7D06F4EA": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AsyncJobHandler438266BD",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AsyncJobHandler438266BD",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WebappHandlerServiceRoleDefaultPolicy7D06F4EA",
        "Roles": [
          {
            "Ref": "WebappHandlerServiceRole4F4D1ACD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WebappMigrationRunnerAC67C012": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
        "WebappMigrationRunnerServiceRoleE27E1F7A",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "ImageUri": {
            "Fn::Sub": "REDACTED",
          },
        },
        "Environment": {
          "Variables": {
            "DATABASE_ENGINE": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:engine::}}",
                ],
              ],
            },
            "DATABASE_HOST": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Address",
              ],
            },
            "DATABASE_NAME": "main",
            "DATABASE_OPTION": "?pool_timeout=20&connect_timeout=20",
            "DATABASE_PASSWORD": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:password::}}",
                ],
              ],
            },
            "DATABASE_PORT": {
              "Fn::GetAtt": [
                "DatabaseCluster5B53A178",
                "Endpoint.Port",
              ],
            },
            "DATABASE_URL": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:engine::}}://{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:username::}}:{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:password::}}@",
                  {
                    "Fn::GetAtt": [
                      "DatabaseCluster5B53A178",
                      "Endpoint.Address",
                    ],
                  },
                  ":",
                  {
                    "Fn::GetAtt": [
                      "DatabaseCluster5B53A178",
                      "Endpoint.Port",
                    ],
                  },
                  "/main?pool_timeout=20&connect_timeout=20",
                ],
              ],
            },
            "DATABASE_USER": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:",
                  {
                    "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                  },
                  ":SecretString:username::}}",
                ],
              ],
            },
          },
        },
        "ImageConfig": {
          "Command": [
            "migration-runner.handler",
          ],
        },
        "MemorySize": 256,
        "PackageType": "Image",
        "Role": {
          "Fn::GetAtt": [
            "WebappMigrationRunnerServiceRoleE27E1F7A",
            "Arn",
          ],
        },
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "WebappMigrationRunnerSecurityGroup7F0DF264",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A",
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
            },
            {
              "Ref": "VpcPrivateSubnet3SubnetF258B56E",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebappMigrationRunnerCurrentVersionREDACTED": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "FunctionName": {
          "Ref": "WebappMigrationRunnerAC67C012",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "WebappMigrationRunnerSecurityGroup7F0DF264": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function ServerlessWebappStarterKitStackWebappMigrationRunner45EAC73E",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WebappMigrationRunnerServiceRoleE27E1F7A": {
      "DependsOn": [
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebappMigrationTrigger42AFC1D9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DatabaseCluster5B53A178",
        "DatabaseClusterSecretAttachmentDC8466C0",
        "DatabaseClusterSecretD1FB634F",
        "DatabaseClusterSecurityGroupfromServerlessWebappStarterKitStackAsyncJobHandlerSecurityGroup5220DFB3IndirectPort9323962E",
        "DatabaseClusterSecurityGroupfromServerlessWebappStarterKitStackDatabaseBastionHostInstanceSecurityGroup4F0DD25BIndirectPort8AFD9922",
        "DatabaseClusterSecurityGroupfromServerlessWebappStarterKitStackWebappHandlerSecurityGroupA009CF4AIndirectPort7311063E",
        "DatabaseClusterSecurityGroupfromServerlessWebappStarterKitStackWebappMigrationRunnerSecurityGroupC0959349IndirectPortDCF4A356",
        "DatabaseClusterSecurityGroupFEF1426A",
        "DatabaseClusterSubnets5540150D",
        "DatabaseClusterWriterD43085C6",
      ],
      "Properties": {
        "ExecuteOnHandlerChange": true,
        "HandlerArn": {
          "Ref": "WebappMigrationRunnerCurrentVersionREDACTED",
        },
        "InvocationType": "RequestResponse",
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91",
            "Arn",
          ],
        },
        "Timeout": "120000",
      },
      "Type": "Custom::Trigger",
      "UpdateReplacePolicy": "Delete",
    },
    "WebappOrigin1FunctionUrlOriginAccessControlEA98B600": {
      "Properties": {
        "OriginAccessControlConfig": {
          "Name": "ServerlessWebappStarterKitStnctionUrlOriginAccessControl17EB4E66",
          "OriginAccessControlOriginType": "lambda",
          "SigningBehavior": "always",
          "SigningProtocol": "sigv4",
        },
      },
      "Type": "AWS::CloudFront::OriginAccessControl",
    },
    "WebappOrigin1InvokeFromApiForServerlessWebappStarterKitStackWebappOrigin1D7B867FF58DBB477": {
      "Properties": {
        "Action": "lambda:InvokeFunctionUrl",
        "FunctionName": {
          "Fn::GetAtt": [
            "WebappHandlerFunctionUrl7AEF8DEE",
            "FunctionArn",
          ],
        },
        "Principal": "cloudfront.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":cloudfront::",
              {
                "Ref": "AWS::AccountId",
              },
              ":distribution/",
              {
                "Ref": "Webapp107041BD",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebappRecord02DDD651": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "Webapp107041BD",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "web.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "WebappSharedCachePolicy14FEE4A0": {
      "Properties": {
        "CachePolicyConfig": {
          "DefaultTTL": 0,
          "MaxTTL": 31536000,
          "MinTTL": 0,
          "Name": "ServerlessWebappStarterKitStackWebappSharedCachePolicy211E133B-us-west-2",
          "ParametersInCacheKeyAndForwardedToOrigin": {
            "CookiesConfig": {
              "CookieBehavior": "all",
            },
            "EnableAcceptEncodingBrotli": true,
            "EnableAcceptEncodingGzip": true,
            "HeadersConfig": {
              "HeaderBehavior": "whitelist",
              "Headers": [
                "authorization",
                "Origin",
                "X-HTTP-Method-Override",
                "X-HTTP-Method",
                "X-Method-Override",
              ],
            },
            "QueryStringsConfig": {
              "QueryStringBehavior": "all",
            },
          },
        },
      },
      "Type": "AWS::CloudFront::CachePolicy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
